<Window x:Class="MazeApp.View.MultiplayerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MazeApp.View"
        xmlns:model="clr-namespace:MazeApp.ViewModel"
        mc:Ignorable="d"
        Title="MultiplayerWindow" 
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UIElements/UIElements.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <local:RectangleConverter x:Key="rectConverter"/>
            <local:EllipseCenterConverter x:Key="centerConverter"/>
            <local:BooleanToVisibilityConverter x:Key="visibilityConverter"/>
            
            <RectangleGeometry x:Key="MazeGeometry" x:Shared="true">
                <RectangleGeometry.Rect>
                    <MultiBinding Converter="{StaticResource rectConverter}">
                        <Binding Path="MazeTotalWidth"/>
                        <Binding Path="MazeTotalHeight"/>
                    </MultiBinding>
                </RectangleGeometry.Rect>
            </RectangleGeometry>

            <EllipseGeometry x:Key="PlayerOneLightGeometry" x:Shared="true" RadiusX="{Binding LightRadius}" RadiusY="{Binding LightRadius}">
                <EllipseGeometry.Center>
                    <MultiBinding Converter="{StaticResource centerConverter}">
                        <Binding Path="PlayerOneX"/>
                        <Binding Path="PlayerOneY"/>
                        <Binding Path="CellSize"/>
                    </MultiBinding>
                </EllipseGeometry.Center>
            </EllipseGeometry>

            <EllipseGeometry x:Key="PlayerTwoLightGeometry" x:Shared="true" RadiusX="{Binding LightRadius}" RadiusY="{Binding LightRadius}">
                <EllipseGeometry.Center>
                    <MultiBinding Converter="{StaticResource centerConverter}">
                        <Binding Path="PlayerTwoX"/>
                        <Binding Path="PlayerTwoY"/>
                        <Binding Path="CellSize"/>
                    </MultiBinding>
                </EllipseGeometry.Center>
            </EllipseGeometry>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Name="baseGrid" Background="{DynamicResource BackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="10px"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Label Grid.Row ="0" Grid.Column="0" Style="{DynamicResource HeaderLabelStyle}"/>
        <Border Grid.Column="0" Grid.Row="0" BorderThickness="0 0 0 4">
            <Border.BorderBrush>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="4"
                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}">
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="{DynamicResource PlayerTwoColor}" Offset="0.0" />
                                    <GradientStop Color="{DynamicResource PlayerOneColor}" Offset="1.0" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Border.BorderBrush>
        </Border>
        <Grid Grid.Row ="2" Grid.Column="0" HorizontalAlignment="Center" Name="mainGrid" >
            <Ellipse Grid.Row ="{Binding PlayerOneY, UpdateSourceTrigger=PropertyChanged}" Grid.Column="{Binding PlayerOneX, UpdateSourceTrigger=PropertyChanged}" Width="{Binding PlayerSize}" Height="{Binding PlayerSize}" Fill="{DynamicResource PlayerOneBrush}" Panel.ZIndex="1"/>
            <Ellipse Grid.Row ="{Binding PlayerTwoY, UpdateSourceTrigger=PropertyChanged}" Grid.Column="{Binding PlayerTwoX, UpdateSourceTrigger=PropertyChanged}" Width="{Binding PlayerSize}" Height="{Binding PlayerSize}" Fill="{DynamicResource PlayerTwoBrush}" Panel.ZIndex="1"/>
            <Rectangle Width="{Binding PickupSize}" Height="{Binding PickupSize}" Grid.Row="{Binding PickupOneY, UpdateSourceTrigger=PropertyChanged}" Grid.Column="{Binding PickupOneX, UpdateSourceTrigger=PropertyChanged}" Fill="{DynamicResource PlayerOneBrush}"/>
            <Rectangle Width="{Binding PickupSize}" Height="{Binding PickupSize}" Grid.Row="{Binding PickupTwoY, UpdateSourceTrigger=PropertyChanged}" Grid.Column="{Binding PickupTwoX, UpdateSourceTrigger=PropertyChanged}" Fill="{DynamicResource PlayerTwoBrush}"/>
            <Rectangle Width="{Binding PickupSize}" Height="{Binding PickupSize}" Grid.Row="{Binding PickupMixedY, UpdateSourceTrigger=PropertyChanged}" Grid.Column="{Binding PickupMixedX, UpdateSourceTrigger=PropertyChanged}" Fill="{DynamicResource ForegroundBrush}"/>
        </Grid>
        <Grid Grid.Row ="2" Grid.Column="0" HorizontalAlignment="Center" Visibility="{Binding IsLimitedVisibility, Converter={StaticResource visibilityConverter}}">
            <Canvas Width="{Binding MazeTotalWidth}" Height="{Binding MazeTotalHeight}" Background="{DynamicResource BackgroundBrush}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Canvas.Clip>
                    <CombinedGeometry GeometryCombineMode="Exclude" Geometry1="{StaticResource MazeGeometry}">
                        <CombinedGeometry.Geometry2>
                            <CombinedGeometry Geometry1="{DynamicResource PlayerOneLightGeometry}" Geometry2="{DynamicResource PlayerTwoLightGeometry}"/>
                        </CombinedGeometry.Geometry2>
                    </CombinedGeometry>
                </Canvas.Clip>
            </Canvas>
        </Grid>
        <Grid Grid.Row ="2" Grid.Column="0" HorizontalAlignment="Center" Visibility="{Binding IsLimitedVisibility, Converter={StaticResource visibilityConverter}}">
            <Canvas Width="{Binding MazeTotalWidth}" Height="{Binding MazeTotalHeight}" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Canvas.Clip>
                    <CombinedGeometry GeometryCombineMode="Exclude" Geometry1="{StaticResource MazeGeometry}">
                        <CombinedGeometry.Geometry2>
                            <CombinedGeometry GeometryCombineMode="Intersect" Geometry1="{DynamicResource PlayerOneLightGeometry}" Geometry2="{DynamicResource PlayerTwoLightGeometry}"/>
                        </CombinedGeometry.Geometry2>
                    </CombinedGeometry>
                </Canvas.Clip>
                <Path Data="{DynamicResource PlayerOneLightGeometry}">
                    <Path.Fill>
                        <RadialGradientBrush>
                            <GradientStop Color="Transparent" Offset="0.7"/>
                            <GradientStop Color="{DynamicResource BackgroundColor}" Offset="1"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                </Path>
                <Path Data="{DynamicResource PlayerTwoLightGeometry}">
                    <Path.Fill>
                        <RadialGradientBrush>
                            <GradientStop Color="Transparent" Offset="0.7"/>
                            <GradientStop Color="{DynamicResource BackgroundColor}" Offset="1"/>
                        </RadialGradientBrush>
                    </Path.Fill>
                </Path>

            </Canvas>
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="2" Style="{StaticResource TimerStyle}" Foreground="{DynamicResource PlayerOneBrush}" Content="{Binding PlayerOneScore, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Grid.Column="0" Style="{StaticResource TimerStyle}" Foreground="{DynamicResource PlayerTwoBrush}" Content="{Binding PlayerTwoScore, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
    </Grid>
</Window>
